<?xml version="1.0" encoding="UTF-8"?>
<jsp:root version="2.1" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:spring="http://www.springframework.org/tags">

    <jsp:output omit-xml-declaration="yes"/>

    <spring:url value="/projects" var="urlProjects"/>
    <spring:url value="/experiments" var="urlExperiments"/>
    <spring:url value="/jobs/json/list" var="urlJobs"/>
    <spring:url value="/jobs/?form" var="urlJobsForm"/>
    <spring:url value="/jobs/cancel/" var="urlJobsCancel"/>

    <c:choose>
        <c:when test="${not empty param['status']}">
            <spring:eval expression="param['status']" var="status"/>
        </c:when>
        <c:otherwise>
            <spring:eval expression="'true,false,false'" var="status"/>
        </c:otherwise>
    </c:choose>

    <script type="text/javascript">
    // <![CDATA[
    angular.module("crisJob", ["angular-dojo"]).controller("jobController", ["$scope", "$http", function($scope, $http) {
        $scope.selectedProject = "";
        $scope.selectedExperiment = "";
        $scope.experimentQueryStr = "";
        $scope.urlFilter = "";

        // ui-grid column definitions
        $scope.gridColumnDefs = [
            {field: 'id', name: 'Job ID', displayName: 'Job ID', enableSorting: true, width: 60},
            {field: 'name', name: 'Name', displayName: 'Name', enableSorting: true, minWidth: 200, cellTemplate: '<div class="ui-grid-cell-contents" ng-bind-html="grid.appScope.formatDisplayValue({value:COL_FIELD,rowData:row.entity})"></div>'},
            {field: 'workflowId.name', name: 'Workflow', displayName: 'Workflow', enableSorting: true, minWidth: 200},
            {field: 'timeUpdated', name: 'Last Updated', displayName: 'Last Updated', enableSorting: true, width: 110, cellTemplate: '<div class="ui-grid-cell-contents" title="TOOLTIP">{{grid.appScope.formatDisplayValue({value:COL_FIELD,rowData:row.entity,isDate:true}) CUSTOM_FILTERS}}</div>'},
            {field: 'statusId.name', name: 'Status', displayName: 'Status', enableSorting: false, width: 85},
            {field: 'actionNeeded', name: 'Next Task', displayName: 'Next Task', enableSorting: false, enableFiltering: false, minWidth: 200, cellTemplate: '<div class="ui-grid-cell-contents" ng-bind-html="grid.appScope.formatDisplayValue({value:COL_FIELD,rowData:row.entity})"></div>'},
        ];

        $scope.formatDisplayValue = function (value, rowData, isDate) {
            if (isDate) {
                return stringDate(value);
            } else {
                var newValue;
                if (value) {
                    newValue = value.replace(/&lt;/g, "<");
                } else {
                    newValue = "";
                }
                return newValue;
            }
        };

        var status;
        if ("${status}") {
            status = "${status}";
        } else {
            status = "true,true,true";
        }
        $scope.url = cris.baseUrl + 'jobs/json/list/?status=' + (status ? status : "true,true,true");

        var dateFilter = '${param["dateFilter"]}';
        if (dateFilter) {
            $scope.url = $scope.url + '&' + dateFilter;
        }

        $scope.sortField = "timeUpdated";
        $scope.sortDirection = 'desc';

        $scope.deprecateButtonDisabled = true;

        $scope.rowSelectCallback = function (rowData) {
            $scope.selectedRow = rowData;
            // ui-grid doesn't support dots in field name. The function formatUnsupportedFieldName is accessible in row Object
            var status = rowData[rowData.formatUnsupportedFieldName("statusId.name")];
            if (status === "CANCELED") {
                $scope.deprecateButtonDisabled = true;
            } else {
                $scope.deprecateButtonDisabled = false;
            }
        };

        $scope.onDelete = function() {
            if ($scope.selectedRow) {
                // ui-grid doesn't support dots in field name. The function formatUnsupportedFieldName is accessible in row Object
                var status = $scope.selectedRow[$scope.selectedRow.formatUnsupportedFieldName("statusId.name")];
                if (status !== "CANCELLED") {
                    var index = $scope.selectedRow.name.indexOf(">");
                    var name;
                    if (index !== -1) {
                        name = $scope.selectedRow.name.substring(index + 1);
                    } else {
                        name = $scope.selectedRow.name;
                    }
                    index = name.lastIndexOf("<");
                    if (index !== -1) {
                        name = name.substring(0, index);
                    }
                    var yes = confirm("Are you sure to delete job: " + $scope.selectedRow.id + ": " + name);
                    if (yes) {
                        $http({
                            url: "${urlJobsCancel}" + $scope.selectedRow.id,
                            method: 'DELETE'
                        }).then(function (successCallback) {
                            $scope.deprecateButtonDisabled = true;
                            refreshGrid();
                        }, function (errorCallback) {

                        });
                    }
                }
            }
        }

        $scope.errorMessage = "";
        $scope.status = [];
        var arrayStatus = dojo.fromJson("[" + status + "]");
        angular.forEach(arrayStatus, function(v, i) {
            if (v === true) {
                $scope.status.push(i);
            }
        });

        $scope.$watchCollection("status", function(newValue, oldValue) {
            if (!angular.equals(newValue,oldValue)) {
                console.dir($scope.status);
                var running = false;
                var finished = false;
                var cancelled = false;
                angular.forEach($scope.status, function(v, i) {
                    if (v === 0) {
                        running = true;
                    } else if (v === 1) {
                        finished = true;
                    } else if (v === 2) {
                        cancelled = true;
                    }
                });
                $scope.url = cris.baseUrl + 'jobs/json/list/?status=' + running +  "," + finished + "," + cancelled;
                refreshGrid();
            }
        }, true);

        $scope.$watch("selectedProject", function(newValue, oldValue) {
            $scope.selectedExperiment = null;
            $scope.experimentQueryStr = "/?sort(+name)" + (newValue ? ("&projectId=" + newValue) : "&projectId=0");

            if (newValue) {
                $scope.urlFilter = '{"op":"equal","data":[{"op":"number","data":"projectId.id","isCol":true},{"op":"number","data":' + newValue + ',"isCol":false}]}';
                refreshGrid();
            }
        });

        $scope.$watch("selectedExperiment", function(newValue, oldValue) {
            if (newValue) {
                $scope.urlFilter =  '{"op":"equal","data":[{"op":"number","data":"experimentId.id","isCol":true},{"op":"number","data":' + newValue + ',"isCol":false}]}';
                refreshGrid();
            }
        });

        function refreshGrid () {
            if ($scope.gridRef) {
                $scope.gridRef.refreshGrid();
            }
            $scope.deprecateButtonDisabled = true;
        }
    }]);


        cris.bootstrapAngular("idJob", "crisJob");
    // ]]>
    </script>

    <div id="idJob" data-ng-controller="jobController">
        <h1 class="text-center">Jobs</h1>

        <div class="row">
            <div class="col-sm-4 col-lg-3 col-lg-offset-1">
                <button type="button" class="btn btn-primary" onclick="window.location.href='${urlJobsForm}'"> Create a New Job</button>
                <span data-ng-show="${user.isAdmin()}">
                    &amp;nbsp;&amp;nbsp;
                    <button type="button" class="btn btn-warning" ng-disabled="deprecateButtonDisabled" data-ng-click="onDelete()">Deprecate</button>
                </span>
            </div>
            <div class="col-sm-4 col-lg-4 text-center">
                &amp;nbsp;&amp;nbsp;&amp;nbsp;{{errorMessage}}
            </div>
            <div class="col-sm-4 col-lg-3 text-right">
                <div class="floatRightToButton">
                    <cris-check-box name="status" orientation="horizontal" items="{Running: 0, Finished: 1, Cancelled: 2}" data-ng-model="status"><!-- --></cris-check-box>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <form class="form-horizontal col-lg-10 col-lg-offset-1">
                <div class="form-group">
                    <label class="col-sm-1 control-label" for="idProject">Project:</label>
                    <div id="idProject" class="col-sm-2">
                        <cris-url-dropdown placeholder="select a project..." url="${urlProjects}" ng-model="selectedProject" id-field="id" name-field="name"></cris-url-dropdown>
                    </div>
                    <label class="col-sm-1  control-label" for="idExperiment">Experiment:</label>
                    <div id="idExperiment" class="col-sm-2">
                        <cris-url-dropdown placeholder="select an experiment..." url="${urlExperiments}{{experimentQueryStr}}" ng-model="selectedExperiment" id-field="id" name-field="name"></cris-url-dropdown>
                    </div>

                </div>
            </form>
        </div>

        <div class="row">
            <div class="col-lg-10 col-lg-offset-1">
                <cris-ui-grid column-defs="gridColumnDefs" url="url" grid-ref="gridRef" sort-field="sortField" sort-direction="{{sortDirection}}" enable-filtering="true" row-select-callback="rowSelectCallback(rowData)" format-display-value="formatDisplayValue(value,rowData,isDate)" url-filter="urlFilter"><!----></cris-ui-grid>
            </div>
        </div>
    </div>

</jsp:root>
